AWSTemplateFormatVersion: 2010-09-09
Description: Application Load Balancer Stack

Parameters:
  AppName:
    Description: Application name of env deployed
    Type: String
  Vpc:
    Description: VPC identifier
    Type: String
  Subnets:
    Description: Public Subnet list
    Type: List<AWS::EC2::Subnet::Id>
  CertificateArn:
    Description: Amazon TLS Certificate ARN
    Type: String

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB security group
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
        - FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          IpProtocol: tcp
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0

  Alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Ref Subnets
      Scheme: internet-facing
      SecurityGroups:
        - !Ref SecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 5
      Tags:
        - Key: AppName
          Value: !Ref AppName

  NoopTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref Vpc

  AlbHttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NoopTargetGroup
      LoadBalancerArn: !Ref Alb
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref CertificateArn

  AlbHttpListenerRedirect:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - RedirectConfig:
            Host: "#{host}"
            Path: "/#{path}"
            Port: 443
            Protocol: "HTTPS"
            Query: "#{query}"
            StatusCode: HTTP_301
          Type: redirect
      LoadBalancerArn: !Ref Alb
      Port: 80
      Protocol: HTTP

Outputs:
  AlbHttpsListener:
    Description: ALB Listener for HTTPS (443)
    Value: !Ref AlbHttpsListener
  AlbHttpListener:
    Description: ALB Listener for HTTP (Redirect to HTTPS)
    Value: !Ref AlbHttpListenerRedirect
  HostedZoneId:
    Description: ALB Hosted ZoneID
    Value: !GetAtt Alb.CanonicalHostedZoneID
  DNSName:
    Description: ALB Hostname
    Value: !GetAtt Alb.DNSName
